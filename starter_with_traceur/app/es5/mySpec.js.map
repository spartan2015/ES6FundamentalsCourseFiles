{"version":3,"file":"app/es5/mySpec.js","sources":["app/es5/mySpec.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"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","sourcesContent":["describe(\"how to run a test\", function () {\r\n\r\n    it(\"let\", function () {\r\n\r\n        let add = (x, y) => x + y;\r\n        expect(add(5, 3)).toBe(8);\r\n\r\n\r\n\r\n    });\r\n\r\n    it(\"const\", function () {\r\n        try {\r\n             const MAX = 1;\r\n                MAX = 2;\r\n                expect().toThrow();\r\n        }catch(e){\r\n            expect(e).toBeDefined();\r\n            console.log(e);\r\n        }\r\n    });\r\n\r\n\r\n    it('can destructure arrays', function(){\r\n        let x = 1;\r\n        let y = 2;\r\n        [x,y]=[y,x];\r\n        expect(x).toBe(2);\r\n        expect(y).toBe(1);\r\n    });\r\n\r\n    it('can destructure arrays 2 ', function(){\r\n        let [x,y]=[1,2,3];\r\n        expect(x).toBe(1);\r\n        expect(y).toBe(2);\r\n    });\r\n\r\n    it('can destructure arrays 3 ', function(){\r\n        let {first : f1, second  : f2} = { first : \"a\", second : \"b\"}\r\n        expect(f1).toBe(\"a\");\r\n        expect(f2).toBe(\"b\");\r\n    });\r\n\r\n    it('can destructure function param', function(){\r\n        \"use strict\";\r\n        let doWork = function(url,{data,cache,header}){\r\n            return data;\r\n        }\r\n\r\n        expect(doWork(\"\",{data : \"data\", cache: \"\", hhaders: \"\"})).toBe(\"data\");\r\n    });\r\n\r\n    it('can default function values', function(){\r\n        \"use strict\";\r\n        let doWork = function(data =\"Scott\"){\r\n            return data;\r\n        }\r\n\r\n        expect(doWork()).toBe(\"Scott\");\r\n        expect(doWork(\"a\")).toBe(\"a\");\r\n    });\r\n\r\n    it('destructure + defaults', function(){\r\n        \"use strict\";\r\n        let doWork = function(url, {data = \"Scott\"}){ /** !NOTICE*/\r\n            return data;\r\n        }\r\n\r\n        expect(doWork('asd',{})).toBe(\"Scott\");\r\n        expect(doWork(\"asd\",{data: \"data\"})).toBe(\"data\");\r\n    });\r\n\r\n    it('rest parameters', function(){\r\n/*\r\n        let f = function(){\r\n            let result = 0;\r\n            for(let i = 0; i < arguments.length; i++){\r\n                result+=arguments[i];\r\n            }\r\n            return result;\r\n        }\r\n\r\n        let f1 = function(...numbers){\r\n            let result = 0;\r\n            numbers.forEach(n=>result+=n);\r\n            return result;\r\n        }\r\n\r\n        expect(f(1,2,3)).toBe(6);\r\n        expect(f1(1,2,3)).toBe(6);\r\n  */\r\n    });\r\n\r\n    it('spread parameters', function(){\r\n        /*\r\n       let f = function(x,y,z){\r\n           return x+y+z;\r\n       }\r\n\r\n       var r = f(...[1,2,3]);\r\n       expect(r).toBe(6);\r\n        */\r\n    });\r\n\r\n    it('template literals', function(){\r\n        let path = \"thePath\";\r\n\r\n        let url = `http://apiserver/${path}`;\r\n\r\n        expect(url).toBe(\"http://apiserver/thePath\");\r\n\r\n        let [x,y]=[1,3];\r\n        expect(`${x+y}`).toBe('4');\r\n    });\r\n\r\n    it('class introduced', function(){\r\n        \"use strict\";\r\n    /*\r\n        var Person = function(){};\r\n        Person.prototype={\r\n            doWork : function(){\r\n                return \"complete\";\r\n            }\r\n        }\r\n        var p = new Person();\r\n        expect(p.doWork()).toBe(\"complete\");\r\n*/\r\n\r\n\r\n        class Person {\r\n            constructor(name){\r\n              this._name = name;\r\n            }\r\n            doWork (){\r\n                return \"complete\";\r\n            }\r\n            getName(){\r\n                return this._name;\r\n            }\r\n\r\n            get name(){/* executes even on e.name*/\r\n                console.log(\"someone is getting name\");\r\n                return this._name;\r\n            }\r\n\r\n            set name(newValue){/* executes even on e.name=newName*/\r\n                console.log(\"someone is setting name: \" + newValue);\r\n                this._name = newValue;\r\n            }\r\n        }\r\n        let e = new Person(\"Scott\");\r\n        e.name = \"elScott\";\r\n        expect(e.doWork()).toBe(\"complete\");\r\n        expect(e.getName()).toBe(\"elScott\");\r\n\r\n\r\n        /* inheritance*/\r\n        class Employee extends Person{\r\n\r\n        }\r\n\r\n        let emp = new Employee(\"G\");\r\n        expect(e.getName()).toBe(\"G\");\r\n\r\n\r\n    });\r\n\r\n\r\n});","$__placeholder__0 = $__placeholder__1","($__placeholder__0 = $__placeholder__1.$__placeholder__2) === void 0 ?\n        $__placeholder__3 : $__placeholder__4","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)"]}